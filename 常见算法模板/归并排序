public int[] mergeSort(int[] nums, int low, int high) {
     int mid = (low + high) / 2;
     if (low < high) {
         mergeSort(nums, low, mid);
         mergeSort(nums, mid + 1, high);
         merge(nums, low, mid, high);
     }
     return nums;
}

public void merge(int[] nums, int low, int mid, int high) {
        int i = low, j = mid + 1, k = 0;
        int[] tmp = new int[high - low + 1];
        while (i <= mid && j <= high) {
            if (nums[i] < nums[j]) {
                tmp[k] = nums[i];
                i++;
                k++;
            } else {
                tmp[k] = nums[j];
                j++;
                k++;
            }
        }
        while (i <= mid) {
            tmp[k] = nums[i];
            i++;
            k++;
        }
        while (j <= high) {
            tmp[k] = nums[j];
            j++;
            k++;
        }
        for (int m = 0; m < tmp.length; m++) {
            nums[low + m] = tmp[m];
        }
        // System.out.println(Arrays.toString(nums));
    }
       
